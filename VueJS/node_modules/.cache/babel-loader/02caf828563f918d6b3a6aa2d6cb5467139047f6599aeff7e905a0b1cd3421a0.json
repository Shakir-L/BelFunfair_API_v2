{"ast":null,"code":"import userToolbar from \"@/components/users/userToolbar.vue\";\nimport flashMessage from \"@/components/users/flashMessage.vue\";\nimport userMap from \"@/components/users/userMap.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"mapView\",\n  components: {\n    userToolbar,\n    flashMessage,\n    userMap\n  },\n  data: () => {\n    return {\n      maneges: null,\n      stands: null\n    };\n  },\n  methods: {\n    getData() {\n      axios({\n        method: 'get',\n        url: 'http://localhost:3000/'\n      }).then(data => {\n        if (data.data.success) {\n          this.maneges = data.data.data.maneges;\n          this.stands = data.data.data.stands;\n        }\n      });\n    }\n  },\n  mounted() {\n    this.getData();\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACAC;QACAC;MACA;QACA;UACA;UACA;QACA;MACA;IACA;EACA;EACAC;IAAA;EAAA;AACA","names":["name","components","userToolbar","flashMessage","userMap","data","maneges","stands","methods","getData","axios","method","url","mounted"],"sourceRoot":"src/views/users","sources":["map.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <header>\r\n      <user-toolbar></user-toolbar>\r\n    </header>\r\n    <flash-message></flash-message>\r\n    <user-map :maneges-data=\"maneges\" :stands-data=\"stands\"></user-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userToolbar from \"@/components/users/userToolbar.vue\";\r\nimport flashMessage from \"@/components/users/flashMessage.vue\";\r\nimport userMap from \"@/components/users/userMap.vue\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"mapView\",\r\n  components:{\r\n    userToolbar,\r\n    flashMessage,\r\n    userMap\r\n  },\r\n  data:()=>{\r\n    return{\r\n      maneges:null,\r\n      stands:null\r\n    }\r\n  },\r\n  methods: {\r\n    getData(){\r\n      axios({\r\n        method: 'get',\r\n        url: 'http://localhost:3000/'\r\n      }).then(data=>{\r\n        if(data.data.success){\r\n          this.maneges = data.data.data.maneges\r\n          this.stands = data.data.data.stands\r\n        }\r\n      })\r\n    }\r\n  },\r\n  mounted(){this.getData()}\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}